<?php
/**
 * ContentApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * luma store api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.7.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ContentApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ContentApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for checkIfContentCollectionExistsV1ContentCollectionExistsGet
     *
     * Check If Content Collection Exists..
     *
     */
    public function testCheckIfContentCollectionExistsV1ContentCollectionExistsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createContentByTitleV1ContentTitlePost
     *
     * Create Content By Title.
     *
     */
    public function testCreateContentByTitleV1ContentTitlePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createContentCollectionV1ContentCollectionPost
     *
     * Create Content Collection.
     *
     */
    public function testCreateContentCollectionV1ContentCollectionPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteContentByInternalIdV1ContentByInternalIdInternalIdDelete
     *
     * Delete Content By Internal Id.
     *
     */
    public function testDeleteContentByInternalIdV1ContentByInternalIdInternalIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteContentByTitleV1ContentTitleDelete
     *
     * Delete Content By Title.
     *
     */
    public function testDeleteContentByTitleV1ContentTitleDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteContentCollectionV1ContentCollectionDelete
     *
     * Delete Content Collection.
     *
     */
    public function testDeleteContentCollectionV1ContentCollectionDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletesAllContentFromCollectionV1ContentResetCollectionDelete
     *
     * Deletes All Content From Collection.
     *
     */
    public function testDeletesAllContentFromCollectionV1ContentResetCollectionDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for gestContentByTitleV1ContentTitleGet
     *
     * Gest Content By Title.
     *
     */
    public function testGestContentByTitleV1ContentTitleGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllContentsV1ContentGet
     *
     * Get All Contents.
     *
     */
    public function testGetAllContentsV1ContentGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importMultipleContentsV1ContentPost
     *
     * Import Multiple Contents.
     *
     */
    public function testImportMultipleContentsV1ContentPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateContentByTitleV1ContentTitlePut
     *
     * Update Content By Title.
     *
     */
    public function testUpdateContentByTitleV1ContentTitlePut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
